exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "tests",
  "tests/**",
]
line-length = 88
indent-width = 4
target-version = "py310"

[lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "D",   # pydocstyle
    "PL",  # pylint
]

# Enable pydocstyle rules
pydocstyle = true

ignore = [
    "E501",  # line too long (géré par Black)
    "D100",  # Missing docstring in public module (trop strict)
    "D104",  # Missing docstring in public package (trop strict)
    "D107",  # Missing docstring in __init__ (redondant)
    "D205",  # 1 blank line required between summary line and description (trop strict)
    "D200",  # One blank line required between summary line and description (trop strict)
    "D212",  # Multi-line docstring summary should start at the second line (trop strict)
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[pydocstyle]
convention = "google"

[isort]
known-first-party = ["app"]
known-third-party = [
    "fastapi",
    "pydantic",
    "sentence_transformers",
    "faiss",
    "chromadb",
    "boto3",
]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[per-file-ignores]
"tests/*" = ["D", "PL"]  # Ignorer les règles de docstring dans les tests
"app/utils/__init__.py" = ["F401"]  # Ignorer les imports inutilisés dans __init__.py

# File-specific rule exclusions
[lint.per-file-ignores]
"tests/*" = ["D100", "D101", "D102", "D103"]  # Ignore missing docstrings in tests
"scripts/*" = ["D100"]  # Ignore module docstrings in scripts

