name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      TESTING: "true"
      SKIP_GIT_CALLS: "true"
      AWS_REGION: ca-central-1
      COPILOT_API_URL: https://api.githubcopilot.com/chat/completions
      ENV: test
      FAISS_INDEX_FILE: index.faiss
      FAISS_METADATA_FILE: metadata.json
      REPO_URLS: test/repo
      S3_BUCKET_NAME: test-bucket
      # Variables pour éviter les erreurs SSL
      PYTHONWARNINGS: "ignore:Unverified HTTPS request"
      CURL_CA_BUNDLE: ""
      SSL_CERT_FILE: ""
      REQUESTS_CA_BUNDLE: ""
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      TEMP_FAISS_DIR: ${{ github.workspace }}/temp/faiss_index

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install poetry

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
          poetry config virtualenvs.in-project false

      - name: Run Tests with Coverage
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # Désactivation explicite des vérifications SSL pour les tests
          export PYTHONHTTPSVERIFY=0
          poetry run coverage run -m pytest --cov --cov-report=html --cov-report=xml --cov-report=term-missing ${{ github.workspace }}

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results.xml

      - name: Upload Coverage Report to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: htmlcov/
